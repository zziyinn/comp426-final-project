{"version":3,"sources":["../src/components/chat/messages/RenderAgentStateMessage.tsx"],"sourcesContent":["import { AgentStateMessage } from \"@copilotkit/runtime-client-gql\";\nimport { RenderMessageProps } from \"../props\";\nimport { useChatContext } from \"../ChatContext\";\nimport { CoagentInChatRenderFunction, useCopilotContext } from \"@copilotkit/react-core\";\n\nexport function RenderAgentStateMessage(props: RenderMessageProps) {\n  const { message, inProgress, index, isCurrentMessage } = props;\n  const { chatComponentsCache } = useCopilotContext();\n  const { icons } = useChatContext();\n\n  if (message.isAgentStateMessage()) {\n    let render: string | CoagentInChatRenderFunction | undefined;\n\n    if (chatComponentsCache.current !== null) {\n      render =\n        chatComponentsCache.current.coAgentStateRenders[\n          `${message.agentName}-${message.nodeName}`\n        ] || chatComponentsCache.current.coAgentStateRenders[`${message.agentName}-global`];\n    }\n\n    if (render) {\n      // render a static string\n      if (typeof render === \"string\") {\n        // when render is static, we show it only when in progress\n        if (isCurrentMessage && inProgress) {\n          return (\n            <div key={index} className={`copilotKitMessage copilotKitAssistantMessage`}>\n              {icons.spinnerIcon} <span className=\"inProgressLabel\">{render}</span>\n            </div>\n          );\n        }\n        // Done - silent by default to avoid a series of \"done\" messages\n        else {\n          return null;\n        }\n      }\n      // render is a function\n      else {\n        const state = message.state;\n\n        let status = message.active ? \"inProgress\" : \"complete\";\n\n        const toRender = render({\n          status: status as any,\n          state,\n          nodeName: message.nodeName,\n        });\n\n        // No result and complete: stay silent\n        if (!toRender && status === \"complete\") {\n          return null;\n        }\n\n        if (!toRender && isCurrentMessage && inProgress) {\n          return (\n            <div key={index} className={`copilotKitMessage copilotKitAssistantMessage`}>\n              {icons.spinnerIcon}\n            </div>\n          );\n        } else if (!toRender) {\n          return null;\n        }\n\n        if (typeof toRender === \"string\") {\n          return (\n            <div key={index} className={`copilotKitMessage copilotKitAssistantMessage`}>\n              {isCurrentMessage && inProgress && icons.spinnerIcon} {toRender}\n            </div>\n          );\n        } else {\n          return (\n            <div key={index} className=\"copilotKitCustomAssistantMessage\">\n              {toRender}\n            </div>\n          );\n        }\n      }\n    }\n    // No render function found- show the default message\n    else if (!inProgress || !isCurrentMessage) {\n      // Done - silent by default to avoid a series of \"done\" messages\n      return null;\n    } else {\n      // In progress\n      return (\n        <div key={index} className={`copilotKitMessage copilotKitAssistantMessage`}>\n          {icons.spinnerIcon}\n        </div>\n      );\n    }\n  }\n}\n"],"mappings":";;;;;AAGA,SAAsC,yBAAyB;AAuBnD,SACsB,KADtB;AArBL,SAAS,wBAAwB,OAA2B;AACjE,QAAM,EAAE,SAAS,YAAY,OAAO,iBAAiB,IAAI;AACzD,QAAM,EAAE,oBAAoB,IAAI,kBAAkB;AAClD,QAAM,EAAE,MAAM,IAAI,eAAe;AAEjC,MAAI,QAAQ,oBAAoB,GAAG;AACjC,QAAI;AAEJ,QAAI,oBAAoB,YAAY,MAAM;AACxC,eACE,oBAAoB,QAAQ,oBAC1B,GAAG,QAAQ,aAAa,QAAQ,UAClC,KAAK,oBAAoB,QAAQ,oBAAoB,GAAG,QAAQ,kBAAkB;AAAA,IACtF;AAEA,QAAI,QAAQ;AAEV,UAAI,OAAO,WAAW,UAAU;AAE9B,YAAI,oBAAoB,YAAY;AAClC,iBACE,qBAAC,SAAgB,WAAW,gDACzB;AAAA,kBAAM;AAAA,YAAY;AAAA,YAAC,oBAAC,UAAK,WAAU,mBAAmB,kBAAO;AAAA,eADtD,KAEV;AAAA,QAEJ,OAEK;AACH,iBAAO;AAAA,QACT;AAAA,MACF,OAEK;AACH,cAAM,QAAQ,QAAQ;AAEtB,YAAI,SAAS,QAAQ,SAAS,eAAe;AAE7C,cAAM,WAAW,OAAO;AAAA,UACtB;AAAA,UACA;AAAA,UACA,UAAU,QAAQ;AAAA,QACpB,CAAC;AAGD,YAAI,CAAC,YAAY,WAAW,YAAY;AACtC,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,YAAY,oBAAoB,YAAY;AAC/C,iBACE,oBAAC,SAAgB,WAAW,gDACzB,gBAAM,eADC,KAEV;AAAA,QAEJ,WAAW,CAAC,UAAU;AACpB,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,aAAa,UAAU;AAChC,iBACE,qBAAC,SAAgB,WAAW,gDACzB;AAAA,gCAAoB,cAAc,MAAM;AAAA,YAAY;AAAA,YAAE;AAAA,eAD/C,KAEV;AAAA,QAEJ,OAAO;AACL,iBACE,oBAAC,SAAgB,WAAU,oCACxB,sBADO,KAEV;AAAA,QAEJ;AAAA,MACF;AAAA,IACF,WAES,CAAC,cAAc,CAAC,kBAAkB;AAEzC,aAAO;AAAA,IACT,OAAO;AAEL,aACE,oBAAC,SAAgB,WAAW,gDACzB,gBAAM,eADC,KAEV;AAAA,IAEJ;AAAA,EACF;AACF;","names":[]}